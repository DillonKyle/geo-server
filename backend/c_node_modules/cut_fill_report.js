const GeoTIFF = require('geotiff');
const { fromUrl, fromUrls, fromArrayBuffer, fromBlob } = GeoTIFF;
const fs = require('fs');

const Analyze = async function (base_dem, topo_dem) {
    const topo_tiff = await GeoTIFF.fromFile(topo_dem);
    const topo_image = await topo_tiff.getImage();
    const topo = await topo_image.readRasters();
    const base_tiff = await GeoTIFF.fromFile(base_dem);
    const base_image = await base_tiff.getImage();
    const base = await base_image.readRasters();

    const width = topo_image.getWidth();
    const height = topo_image.getHeight();

    var pos_elev_val = 0
    var neg_elev_val = 0

    const neg_elev_file = fs.createWriteStream('neg_elev_file.txt', {'flags': 'a', 'encoding': null, 'mode': 0666});
    const pos_elev_file = fs.createWriteStream('pos_elev_file.txt', {'flags': 'a', 'encoding': null, 'mode': 0666});

    for (let i = 0; i < topo[0].length; ++i) {
        const elev = (topo[0][i] - base[0][i]) * 1.0 * 1.0;
        if (elev > 0 && elev < 100) {
            pos_elev_file.write(`${elev}\n`);
            pos_elev_val += elev;
        }
        else if (elev > -100 && elev < 0) {
            neg_elev_file.write(`${elev}\n`);
            neg_elev_val += elev;
        }
    }

    pos_elev_file.on('finish', () => {
        console.log(`Cut Volume: ${neg_elev_val}`)
    });
    pos_elev_file.on('error', (err) => {console.error(err)});
    pos_elev_file.end();
    
    neg_elev_file.on('finish', () => {
        console.log(`Fill Volume: ${pos_elev_val}`)
    });
    neg_elev_file.on('error', (err) => {console.error(err)});
    neg_elev_file.end();
    return elev_val = {neg_elev_val: neg_elev_val, pos_elev_val: pos_elev_val};
};

// Analyze('./backend/downloads/base_dem.tif', './backend/downloads/berm_dem.tif')

module.exports = {Analyze: Analyze}